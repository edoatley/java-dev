plugins {
    id 'groovy'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

project.ext {
  versions = [
    jetty : '12.0.7',
    jersey : '3.1.5',
    slf4j : '2.0.12'
  ]
}

mainClassName = 'uk.org.edoatley.App'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

// Eclipse Jetty - provides a web server and servlet container. 
// Note that since v12 artifacts that are EE specific are now isolated in their own EE specific layer.
// This is why we have the ee10 servlet BoM and the jetty cory BoM
    implementation platform("org.eclipse.jetty:jetty-bom:$versions.jetty")
    implementation 'org.eclipse.jetty:jetty-server'
    implementation platform("org.eclipse.jetty.ee10:jetty-ee10-bom:$versions.jetty")
    implementation "org.eclipse.jetty.ee10:jetty-ee10-servlet"

    // Eclipse Jersey - a REST framework that provides a JAX-RS (JSR-370) implementation
    implementation platform("org.glassfish.jersey:jersey-bom:$versions.jersey")
    implementation "org.glassfish.jersey.core:jersey-server"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core"
    implementation "org.glassfish.jersey.containers:jersey-container-jetty-http"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson"
    implementation "org.glassfish.jersey.inject:jersey-hk2"

    // slf4j
    implementation platform("org.slf4j:slf4j-bom:$versions.slf4j")
    implementation "org.slf4j:slf4j-api"
    implementation "org.slf4j:slf4j-simple"

    // Groovy / Spock / JUnit for testing
    testImplementation libs.groovy
    testImplementation libs.spock.core
    testImplementation libs.guava
    testImplementation libs.junit
    testImplementation("org.junit.jupiter:junit-jupiter")
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // JsonSlurper
    testImplementation("org.codehaus.groovy:groovy-json:3.0.21") 
    // OkHttp3
    testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging { 
        showStandardStreams = true
        exceptionFormat "full"
        minGranularity = 3
    }
}