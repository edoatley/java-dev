name: Local Docker Build
description: Locally build and tags the docker image

inputs:
  image:
    description: 'What to tag image with'
    required: true
  context:
    description: 'Docker file / app location'
    required: true
  java-version:
    description: 'Version of JDK to setup'
    required: true
    default: '21'
  gradle-version:
    description: 'Version of Gradle to setup'
    required: false
    default: 'current'    

runs:
  using: 'composite'
  steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker Build
        uses: docker/build-push-action@v5
        with:
          context: '${{ inputs.context }}'
          push: false
          load: true
          tags: '${{ inputs.image }}'
      - 
        name: Find Free Port
        id: port
        run: |
          BASE_PORT=1234
          INCREMENT=1
          port=$BASE_PORT

          while [ -n "$(ss -tan4H "sport = $port")" ]; do
            port=$((port+INCREMENT))
          done
          echo "free_port=$port"
          echo "free_port=$port" >> $GITHUB_OUTPUT
        shell: bash
      - 
        name: Run Docker Image
        run: |
          docker run -d -p ${{ steps.port.outputs.free_port }}:8080 --name restapi ${{ inputs.image }}
        shell: bash
      - 
        name: Run integration test  
        env:
          SERVICE_URL: http://localhost:${{ steps.port.outputs.free_port }}
        working-directory: ${{ inputs.context }}  
        run: |
          gradle integrationTest
        shell: bash
      - 
        name: Stop Running Docker Image
        run: |
          docker stop restapi
        shell: bash
      - 
        name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/itest/TEST-*.xml'
  