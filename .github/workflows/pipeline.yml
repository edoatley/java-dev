name: 'Build Java Application and Docker Image'
on: 
  push:

permissions:
  contents: read
  checks: write
  id-token: write
  security-events: write

env:
  IMAGE_NAME: ${{ github.repository }}
  JAVA_VERSION: "21"

jobs:
  java-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build and Test
        uses: ./.github/actions/java-ci-build
        with:
          java-version: ${{ env.JAVA_VERSION }}
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}
  
      - name: Upload the restapi-all.jar file to share with next workflow
        uses: actions/upload-artifact@v4
        with:
          name: restapi-all.jar
          path: app/build/libs/restapi-all.jar
          retention-days: 1
          overwrite: true

  docker-build:
    runs-on: ubuntu-latest
    needs: java-build
    outputs:
      image-tag: ${{steps.docker.outputs.image-tagÂ }}
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Download the restapi-all.jar file from the previous job
        uses: actions/download-artifact@v4
        with:
          name: restapi-all.jar
          path: app

      - name: Docker build and push to GHCR
        uses: ./.github/actions/ghcr-docker-image  
        id: docker
        with:
          image-name: ${{ env.IMAGE_NAME }}
          jar-location: restapi-all.jar
          dockerfile: ../docker/Dockerfile.distroless
          base-image: mcr.microsoft.com/openjdk/jdk:21-distroless
          
  # could consider only running for certain branches          
  integration-tests:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4

      - name: Run Integration Tests
        uses: ./.github/actions/integration-tests
        with:
          image: ${{ env.IMAGE_NAME }}
          java-version: ${{ env.JAVA_VERSION }}
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}

  container-image-scan:
    needs: docker-build
    name: Scan docker image
    uses: ./.github/workflows/container_image_scan.yml
    secrets: inherit
    permissions:
      contents: read
      security-events: write
    with:
      image-tag: ${{ needs.docker-build.outputs.image-tag }}
  
  sca:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Software Composition Analysis
        uses: ./.github/actions/sca
        with:
          java-version: ${{ env.JAVA_VERSION }}
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}